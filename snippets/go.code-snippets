{
  "go-package": {
    "prefix": "pkg",
    "body": [
      "package ${1}",
      "  ${2}"
    ],
    "description": "declare go package"
  },
  "go-import-m": {
    "prefix": "ims",
    "body": [
      "import (",
      "  \"${1}\"",
      ")"
    ],
    "description": "multiple packages"
  },
  "go-import-s": {
    "prefix": "im",
    "body": [
      "import \"${1}\""
    ],
    "description": "single packages"
  },
  "go-func": {
    "prefix": "f",
    "body": [
      "func ${1}() ${2} {",
      "  ${3}",
      "}"
    ],
    "description": "function"
  },
  "go-function-main": {
    "prefix": "fm",
    "body": [
      "func main()  {",
      "  ${1}",
      "}"
    ],
    "description": "main function"
  },
  "go-struct": {
    "prefix": "ts",
    "body": [
      "type ${1} struct {",
      "  ${2}",
      "}"
    ],
    "description": "struct"
  },
  "分隔线": {
    "scope": "go",
    "prefix": [
      "===",
      "fgx"
    ],
    "body": [
      "fmt.Printf(\"%s\\r\\n\", strings.Repeat(\"${1:=}\", ${2:30}))"
    ],
    "description": "分隔线"
  },
  "_err return": {
    "prefix": [
      "iferr",
      "iferrr"
  ],
    "body": [
      "if err != nil {",
      "  _err = err",
      "  fmt.Printf(\"$1 错误 %s\", _err.Error())",
      "  return",
      "}"
    ],
    "description": "_err"
  },
  "_err error": {
    "prefix": ["_err"],
    "body": [
      "_err error"
    ],
    "description": "_err error"
  },
  "err error": {
    "prefix": ["err"],
    "body": [
      "err error"
    ],
    "description": "err error"
  },
  "error printf": {
    "scope": "go",
    "prefix": [
      "ife",
      "iferrp"
    ],
    "body": [
      "if err != nil {",
      "  fmt.Printf(\"$1 错误 %s\", err.Error())",
      "  return",
      "}"
    ],
    "description": "错误打印"
  },
  "%s": {
    "scope": "go",
    "prefix": ["%s"],
    "body": [
      "%s\\r\\n"
    ],
    "description": "%s"
  }
}