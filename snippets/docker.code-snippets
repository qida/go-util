{
  "使用Alpine镜像": {
    "prefix": ["d alpine"],
    "body": [
      "#基于 alpine:latest",
      "FROM alpine:latest",
      "LABEL qida <sunqida@foxmail.com>",
      "#设置代理镜像",
      "RUN alpine_version=`cat /etc/issue | head -1 | awk '{print \\$5}'` \\",
      "   && echo -e https://mirrors.ustc.edu.cn/alpine/${1|latest-stable,v${alpine_version}|}/main/ > /etc/apk/repositories \\",
      "   && echo -e https://mirrors.aliyun.com/alpine/${1|latest-stable,v${alpine_version}|}/main/ >> /etc/apk/repositories",
      "#设置时区",
      "ENV TZ=Asia/Shanghai",
      "RUN apk --update add tzdata libc6-compat `#解决 not found 问题`\\",
      "  && cp /usr/share/zoneinfo/${2|Asia/Shanghai,${TZ}|} /etc/localtime \\",
      "  && echo \"${2|Asia/Shanghai,${TZ}|}\" > /etc/timezone \\",
      "  && apk del tzdata \\",
      "  && rm -rf /var/cache/apk/*"
    ],
    "description": "使用Alpine镜像"
  },
  "构建golang环境": {
    "prefix": ["d golang"],
    "body": [
      "#基于 golang:1.16-alpine",
      "FROM golang:1.16-alpine AS builder",
      "LABEL qida <sunqida@foxmail.com>",
      "#设置环境变量",
      "ENV GOPATH=/opt/repo",
      "ENV GO111MODULE=on",
      "ENV GOPROXY=https://goproxy.io,direct",
      "#源路径 目标路径",
      "COPY . $$GOPATH/src/${1:项目名称}",
      "#执行 go build .",
      "RUN cd $$GOPATH/src/${1:项目名称} && go build .",
      "",
      "#基于 alpine:latest",
      "FROM alpine:latest",
      "LABEL EMAIL=sunqida@foxmail.com",
      "#设置代理镜像",
      "RUN alpine_version=`cat /etc/issue | head -1 | awk '{print \\$5}'` \\",
      "   && echo -e https://mirrors.ustc.edu.cn/alpine/${2|latest-stable,v${alpine_version}|}/main/ > /etc/apk/repositories \\",
      "   && echo -e https://mirrors.aliyun.com/alpine/${2|latest-stable,v${alpine_version}|}/main/ >> /etc/apk/repositories",
      "#设置时区",
      "ENV TZ=Asia/Shanghai",
      "RUN apk --update add tzdata libc6-compat `#解决 not found 问题`\\",
      "  && cp /usr/share/zoneinfo/${2|Asia/Shanghai,${TZ}|} /etc/localtime \\",
      "  && echo \"${2|Asia/Shanghai,${TZ}|}\" > /etc/timezone \\",
      "  && apk del tzdata \\",
      "  && rm -rf /var/cache/apk/*",
      "#源路径 目标路径 从镜像中 COPY",
      "COPY --from=builder /opt/repo/src/${1:项目名称} /opt",
      "#设置端口映射",
      "EXPOSE ${3:8080}",
      "#设置工作目录",
      "WORKDIR /opt",
      "#设置启动命令",
      "CMD [\"./${1:项目名称}\"]"
    ],
    "description": "构建golang环境"
  },
  "基本ubuntu环境": {
    "prefix": ["d ubuntu"],
    "body": [
      "FROM ubuntu:latest",
      "LABEL qida <sunqida@foxmail.com>",
      "RUN echo 'deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse ' > /etc/apt/sources.list && \\",
      "    echo 'deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    echo 'deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    echo 'deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    echo 'deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    echo 'deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    echo 'deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    echo 'deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    echo 'deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    echo 'deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse ' >> /etc/apt/sources.list && \\",
      "    apt-get update -y && apt-get -f install && apt-get upgrade && \\",
      "    apt-get install -y ${1:git} && \\",
      "    apt-get clean -y && \\",
      "    rm -rf /var/cache/apt/* /var/lib/apt/lists/* /tmp/*",
      "CMD uname -a"
    ],
    "description": "基本ubuntu环境"
  },
    "基本debian环境": {
    "prefix": ["d debian"],
    "body": [
      "   FROM debian:bullseye",
      "   RUN sed -i 's/deb.debian.org/mirrors.huaweicloud.com/g' /etc/apt/sources.list;",
      "   RUN sed -i 's|security.debian.org/debian-security|mirrors.huaweicloud.com/debian-security|g' /etc/apt/sources.list;",
      "   RUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai' >/etc/timezone",
      "   RUN apt-get update && apt-get install -y --no-install-recommends git \\",
      "     && apt-get purge --auto-remove \\",
      "     && rm -rf /tmp/* /var/lib/apt/lists/*",
      "   RUN mkdir -p /app",
      "   WORKDIR /app",
      "CMD uname -a"
    ],
    "description": "基本debian环境"
  }
}