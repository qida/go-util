{
  "主函数main": {
    "prefix": "gf main",
    "body": [
      "func main()  {",
      "  ${1}",
      "}"
    ],
    "description": "主函数main"
  },
  "[]byte转string": {
    "scope": "go",
    "prefix": ["gf []byte2string"],
    "body": [
      "$2 := *(*string)(unsafe.Pointer(&$1))"
    ],
    "description": "[]byte转string"
  },
  "优雅退出": {
    "scope": "go",
    "prefix": ["gf good_quit"],
    "body": [
      "sig := make(chan os.Signal)",
      "signal.Notify(sig, syscall.SIGINT /*Ctrl+c、panic()*/, syscall.SIGQUIT /*正常退出*/, syscall.SIGTERM, syscall.SIGHUP /*kill*/)",
      "go func() {",
      "  for s := range sig {",
      "    switch s {",
      "    case syscall.SIGINT, syscall.SIGQUIT, syscall.SIGTERM, syscall.SIGHUP:",
      "      //退出时处理",
      "      // quit()",
      "      if i, ok := s.(syscall.Signal); ok {",
      "        fmt.Printf(\"退出 Code: %d\", int(i))",
      "        os.Exit(int(i))",
      "      } else {",
      "        os.Exit(0)",
      "      }",
      "    default:",
      "      runtime.Gosched()",
      "    }",
      "  }",
      "}()"
    ],
    "description": "优雅退出"
  },
  "文件下载带进度条": {
    "scope": "go",
    "prefix": ["gf download"],
    "body": [
      "import (",
      "   \"github.com/schollz/progressbar/v3\"",
      ")",
      "func DownloadFile() {",
      "  golangPkg := \"https://golang.google.cn/dl/go1.16.4.darwin-amd64.pkg\"",
      "  req, _ := http.NewRequest(\"GET\", golangPkg, nil)",
      "  resp, _ := http.DefaultClient.Do(req)",
      "  defer resp.Body.Close()",
      "  f, _ := os.OpenFile(\"go1.16.4.darwin-amd64.pkg\", os.O_CREATE|os.O_WRONLY, 0644)",
      "  defer f.Close()",
      "  bar := progressbar.DefaultBytes(",
      "    resp.ContentLength,",
      "    \"正在下载\",",
      "  )",
      "  io.Copy(io.MultiWriter(f, bar), resp.Body)",
      "}"
    ],
    "description": "文件下载带进度条"
  }
}